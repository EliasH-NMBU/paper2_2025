ID,ptLTL,Generated ptLTL,Equivalence Check
classifier_assumption,(H (((classifier = 0) xor (classifier = 1)) xor (classifier = 2))),H((Classifier = 0) ∨ (Classifier = 1) ∨ (Classifier = 2)),False
dtt assumption,(H ((! (classifier = 0)) -> (distance_to_target >= 0))),H((Classifier ≠ 0) → (distance_to_target ≥ 0)),True
operationalstate_0,(H ((OpState = 0) -> ((((! slowdown) & (! halt)) & (! alert)) & (! turnoffUVC)))),H (OpState = 0 → ¬Slowdown ∧ ¬Halt ∧ ¬Alert ∧ ¬TurnoffUVC),True
operationalstate_1,(H ((OpState = 1) -> ((((! slowdown) & (! halt)) & alert) & (! turnoffUVC)))),H( (OpState = 1) → (Alert ∧ ¬Slowdown ∧ ¬Halt ∧ ¬TurnoffUVC) ),True
operationalstate_2,(H ((OpState = 2) -> (((slowdown & (! halt)) & alert) & (! turnoffUVC)))),H((OpState = 2) → (Slowdown ∧ Alert ∧ ¬Halt ∧ ¬TurnoffUVC)),True
operationalstate_3,(H ((OpState = 3) -> ((((! slowdown) & halt) & alert) & turnoffUVC))),H( (OpState = 3) → (Halt ∧ TurnoffUVC ∧ ¬Slowdown ∧ ¬Alert) ),False
state_req000,(H ((classifier = 0) -> (OpState = 0))),H (Classifier = 0 → OpState = 0),True
state_req101,(H ((classifier = 1) -> (dgt_7 -> (OpState = 1)))),"\[
(\text{Classifier} = 1 \land \text{dgt\_7}) \; S \; (\text{OpState} = 1)
\]",False
state_req102,(H ((classifier = 1) -> (((! dgt_7) & dgt_3) -> (OpState = 2)))),H((Classifier = 1 ∧ dgt_7 ∧ ¬dgt_3) → (OpState = 2)),False
state_req103,(H ((classifier = 1) -> ((! dgt_3) -> (OpState = 3)))),H((Classifier = 1 ∧ dgt_3) → (OpState = 3)),False
state_req201,(H ((classifier = 2) -> (dgt_7 -> (OpState = 2)))),"\[
H\big((Classifier = 2 \wedge dgt\_7) \rightarrow (OpState = 2)\big)
\]",False
state_req202,(H ((classifier = 2) -> (((! dgt_7) & dgt_3) -> (OpState = 3)))),H((Classifier = 2 ∧ dgt_7 ∧ ¬dgt_3) → (OpState = 3)),False
state_req203,(H ((classifier = 2) -> ((! dgt_3) -> (OpState = 3)))),"\[
H((Classifier = 2 \land dgt\_3) \rightarrow OpState = 3)
\]",False
